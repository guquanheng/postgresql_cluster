---


- name: '065 | 安装pgbouncer'
  ansible.builtin.package:
    name: pgbouncer
    state: latest
  register: package_status
  until: package_status is success
  delay: 5
  retries: 3
  environment: "{{ proxy_env | default({}) }}"
  when: ansible_os_family == "Debian" or
        (ansible_os_family == "RedHat" and
        ansible_distribution_major_version == '7')
  tags: pgbouncer_install, pgbouncer


# RHEL 8
- name: '065 | 安装pgbouncer'
  ansible.builtin.dnf:
    name: pgbouncer
    state: latest
    disablerepo: AppStream
  environment: "{{ proxy_env | default({}) }}"
  when: ansible_os_family == "RedHat" and
        ansible_distribution_major_version >= '8'
  tags: pgbouncer_install, pgbouncer

- name: '066 | 创建pgbouncer配置目录'
  ansible.builtin.file:
    path: "{{ pgbouncer_conf_dir }}"
    state: directory
    owner: postgres
    group: postgres
    mode: "0750"
  tags: pgbouncer_conf, pgbouncer

- name: '067 | 创建pgbouncer日志目录'
  ansible.builtin.file:
    path: "{{ pgbouncer_log_dir }}"
    state: directory
    owner: postgres
    group: postgres
    mode: "0750"
  tags: pgbouncer_conf, pgbouncer

- name: '068 | 检查pgbouncer systemd服务文件'
  ansible.builtin.stat:
    path: /etc/systemd/system/pgbouncer.service
  register: pgbouncer_systemd_service
  tags: pgbouncer_service, pgbouncer

- name: Stop and disable standard init script
  ansible.builtin.service:
    name: pgbouncer
    state: stopped
    enabled: false
  when:
    - ansible_os_family == "Debian"
    - not pgbouncer_systemd_service.stat.exists
  tags: pgbouncer_service, pgbouncer

- name: '069 | 设置svc文件'
  ansible.builtin.template:
    src: templates/pgbouncer.service.j2
    dest: "/etc/systemd/system/pgbouncer{{ '-%d' % (idx + 1) if idx > 0 else '' }}.service"
    owner: postgres
    group: postgres
    mode: "0644"
  loop: "{{ range(0, (pgbouncer_processes | default(1) | int)) | list }}"
  loop_control:
    index_var: idx
    label: "{{ 'pgbouncer' if idx == 0 else 'pgbouncer-%d' % (idx + 1) }}"
  notify: "restart pgbouncer"
  tags: pgbouncer_service, pgbouncer

- name: '070 | 启动pgbouncer服务'
  ansible.builtin.systemd:
    daemon_reload: true
    name: "pgbouncer{{ '-%d' % (idx + 1) if idx > 0 else '' }}"
    enabled: true
  loop: "{{ range(0, (pgbouncer_processes | default(1) | int)) | list }}"
  loop_control:
    index_var: idx
    label: "{{ 'pgbouncer' if idx == 0 else 'pgbouncer-%d' % (idx + 1) }}"
  tags: pgbouncer_service, pgbouncer



- block:  # workaround for pgbouncer from postgrespro repo
    - name: '071 | 查看pgbouncer二进制文件是否存在'
      ansible.builtin.stat:
        path: /usr/bin/pgbouncer
      register: pgbouncer_bin

    - name: '072 | 创建pgbouncer二进制文件软链接'
      ansible.builtin.file:
        src: /usr/sbin/pgbouncer
        dest: /usr/bin/pgbouncer
        owner: root
        group: root
        state: link
      when: not pgbouncer_bin.stat.exists
  when: ansible_os_family == "RedHat" and
        postgresql_packages|join(" ") is search("postgrespro")
  tags: pgbouncer_service, pgbouncer

- name: '073 | 配置pgbouncer日志轮转'
  ansible.builtin.copy:
    content: |
      {{ pgbouncer_log_dir }}/pgbouncer{{ '-%d' % (idx + 1) if idx > 0 else '' }}.log {
             daily
             rotate 7
             copytruncate
             delaycompress
             compress
             notifempty
             missingok
             su root root
      }
    dest: "/etc/logrotate.d/pgbouncer{{ '-%d' % (idx + 1) if idx > 0 else '' }}"
  loop: "{{ range(0, (pgbouncer_processes | default(1) | int)) | list }}"
  loop_control:
    index_var: idx
    label: "{{ 'pgbouncer' if idx == 0 else 'pgbouncer-%d' % (idx + 1) }}"
  tags: pgbouncer_logrotate, pgbouncer

- name: '074 | 配置pgbouncer.ini'
  ansible.builtin.template:
    src: templates/pgbouncer.ini.j2
    dest: "{{ pgbouncer_conf_dir }}/pgbouncer{{ '-%d' % (idx + 1) if idx > 0 else '' }}.ini"
    owner: postgres
    group: postgres
    mode: "0640"
  loop: "{{ range(0, (pgbouncer_processes | default(1) | int)) | list }}"
  loop_control:
    index_var: idx
    label: "{{ 'pgbouncer' if idx == 0 else 'pgbouncer-%d' % (idx + 1) }}"
  notify: "reload pgbouncer"
  when: existing_pgcluster is not defined or not existing_pgcluster|bool
  tags: pgbouncer_conf, pgbouncer

- name: '075 | 配置pgbouncer用户认证文件'
  ansible.builtin.template:
    src: templates/userlist.txt.j2
    dest: "{{ pgbouncer_conf_dir }}/userlist.txt"
    owner: postgres
    group: postgres
    mode: "0640"
  when:
    - (existing_pgcluster is not defined or not existing_pgcluster|bool)
    - not pgbouncer_auth_user|bool
  tags: pgbouncer




- block:  # for add_pgnode.yml
    - name: "finaly | 测试结束"
      fail:
        msg: "完成测试"
      when: 1 == 1
    - name: Fetch pgbouncer.ini file from master
      run_once: true
      ansible.builtin.fetch:
        src: "{{ pgbouncer_conf_dir }}/pgbouncer{{ '-%d' % (idx + 1) if idx > 0 else '' }}.ini"
        dest: files/
        validate_checksum: true
        flat: true
      loop: "{{ range(0, (pgbouncer_processes | default(1) | int)) | list }}"
      loop_control:
        index_var: idx
        label: "{{ 'pgbouncer' if idx == 0 else 'pgbouncer-%d' % (idx + 1) }}"
      delegate_to: "{{ groups.master[0] }}"

    - name: Fetch userlist.txt conf file from master
      run_once: true
      ansible.builtin.fetch:
        src: "{{ pgbouncer_conf_dir }}/userlist.txt"
        dest: files/
        validate_checksum: true
        flat: true
      delegate_to: "{{ groups.master[0] }}"
      when: not pgbouncer_auth_user|bool

    - name: Copy pgbouncer.ini file to replica
      ansible.builtin.copy:
        src: "files/pgbouncer{{ '-%d' % (idx + 1) if idx > 0 else '' }}.ini"
        dest: "{{ pgbouncer_conf_dir }}"
        owner: postgres
        group: postgres
        mode: "0640"
      loop: "{{ range(0, (pgbouncer_processes | default(1) | int)) | list }}"
      loop_control:
        index_var: idx
        label: "{{ 'pgbouncer' if idx == 0 else 'pgbouncer-%d' % (idx + 1) }}"

    - name: Copy userlist.txt conf file to replica
      ansible.builtin.copy:
        src: files/userlist.txt
        dest: "{{ pgbouncer_conf_dir }}"
        owner: postgres
        group: postgres
        mode: "0640"
      when: not pgbouncer_auth_user|bool

    - name: Remove pgbouncer.ini file from localhost
      become: false
      run_once: true
      ansible.builtin.file:
        path: "files/pgbouncer{{ '-%d' % (idx + 1) if idx > 0 else '' }}.ini"
        state: absent
      loop: "{{ range(0, (pgbouncer_processes | default(1) | int)) | list }}"
      loop_control:
        index_var: idx
        label: "{{ 'pgbouncer' if idx == 0 else 'pgbouncer-%d' % (idx + 1) }}"
      delegate_to: localhost

    - name: Remove userlist.txt conf file from localhost
      become: false
      run_once: true
      ansible.builtin.file:
        path: files/userlist.txt
        state: absent
      delegate_to: localhost
      when: not pgbouncer_auth_user|bool

    - name: Prepare pgbouncer.ini conf file (replace "listen_addr")
      ansible.builtin.lineinfile:
        path: "{{ pgbouncer_conf_dir }}/pgbouncer{{ '-%d' % (idx + 1) if idx > 0 else '' }}.ini"
        regexp: '^listen_addr ='
        line: 'listen_addr = {{ pgbouncer_listen_addr }}'
        backrefs: true
      loop: "{{ range(0, (pgbouncer_processes | default(1) | int)) | list }}"
      loop_control:
        index_var: idx
        label: "{{ 'pgbouncer' if idx == 0 else 'pgbouncer-%d' % (idx + 1) }}"
      notify: "reload pgbouncer"
      when: pgbouncer_listen_addr != "0.0.0.0"
  when: existing_pgcluster is defined and existing_pgcluster|bool
  tags: pgbouncer_conf, pgbouncer

...
