---

- name: Make sure handlers are flushed immediately
  ansible.builtin.meta: flush_handlers

- name: '042 | 安装依赖包'
  ansible.builtin.package:
    name:
      - unzip
      - tar
      - bzip2
      - gzip
      - xz-utils
    state: present
  register: package_status
  until: package_status is success
  delay: 5
  retries: 3
  environment: "{{ proxy_env | default({}) }}"
  tags: etcd, etcd_install

- block:  # install etcd package from repo
    - name: '043 | 下载etcd安装包'
      ansible.builtin.get_url:
        url: "{{ item }}"
        dest: /tmp/
        timeout: 60
        validate_certs: false
      loop:
        - "{{ etcd_package_repo }}"
      environment: "{{ proxy_env | default({}) }}"

    - name: '044 | 解压etcd安装包'
      ansible.builtin.unarchive:
        src: "/tmp/{{ etcd_package_repo | basename }}"
        dest: /tmp/
        extra_opts:
          - --no-same-owner
        remote_src: true

    - name: '045 | 复制 "etcd" 和 "etcdctl" 二进制文件到 /usr/local/bin/'
      ansible.builtin.copy:
        src: "/tmp/{{ etcd_package_repo.split('.tar.gz')[0] | basename }}/{{ item }}"
        dest: /usr/local/bin/
        mode: u+x,g+x,o+x
        remote_src: true
      loop:
        - etcd
        - etcdctl
  when:
    - installation_method == "repo"
    - etcd_package_repo | length > 0
    - not ansible_check_mode
  tags: etcd, etcd_install

- block:  # install etcd package from file
    - name: "043 |  下载etcd安装包"
      ansible.builtin.unarchive:
        src: "{{ etcd_package_file }}"
        dest: /tmp/
        extra_opts:
          - --no-same-owner

    - name:  '044 | 复制 "etcd" 和 "etcdctl" 二进制文件到 /usr/local/bin/'
      ansible.builtin.copy:
        src: "/tmp/{{ etcd_package_file.split('.tar.gz')[0] | basename }}/{{ item }}"
        dest: /usr/local/bin/
        mode: u+x,g+x,o+x
        remote_src: true
      loop:
        - etcd
        - etcdctl
  when:
    - installation_method == "file"
    - etcd_package_file | length > 0
    - not ansible_check_mode
  tags: etcd, etcd_install

- name: '046 | 创建 etcd 用户和组'
  ansible.builtin.user:
    name: etcd
    shell: /usr/sbin/nologin
    home: "{{ etcd_data_dir }}"
  tags: etcd, etcd_conf

- name: '047 | 创建 etcd 配置文件目录'
  ansible.builtin.file:
    path: /etc/etcd
    state: directory
  tags: etcd, etcd_conf

- name: '048 | 创建 etcd 数据目录'
  ansible.builtin.file:
    path: "{{ etcd_data_dir }}"
    state: directory
    owner: etcd
    mode: "0700"
  tags: etcd, etcd_conf

- name: '049 | 创建 etcd 配置目录'
  ansible.builtin.template:
    src: templates/etcd.conf.j2
    dest: /etc/etcd/etcd.conf
  tags: etcd, etcd_conf

- name: '050 | 创建 etcd 服务文件'
  ansible.builtin.template:
    src: templates/etcd.service.j2
    dest: /etc/systemd/system/etcd.service
  tags: etcd, etcd_conf

- name: '051 | 启动 etcd 服务'
  ansible.builtin.systemd:
    daemon_reload: true
    name: etcd
    enabled: true
    state: started
  tags: etcd, etcd_start

- name: '052 | 等待 etcd 服务启动'
  ansible.builtin.wait_for:
    port: 2379
    host: 127.0.0.1
    state: started
    timeout: 120
    delay: 10
  ignore_errors: false
  tags: etcd, etcd_start

- block:
    - name: '053 | 检查 etcd 集群状态'
      ansible.builtin.command: >
        /usr/local/bin/etcdctl endpoint health
        --endpoints=http://{{ inventory_hostname }}:2379
      environment:
        ETCDCTL_API: "3"
      register: etcd_health_result
      until: >
        'is healthy' in etcd_health_result.stdout or
        'is healthy' in etcd_health_result.stderr
      retries: 10
      delay: 10
      changed_when: false
      ignore_errors: false

    - name: '054 | 显示 etcd 集群状态'
      ansible.builtin.debug:
        msg: >
          {{ etcd_health_result.stdout
          if etcd_health_result.stdout | length > 0
          else etcd_health_result.stderr }}
  when: not ansible_check_mode
  tags: etcd, etcd_start, etcd_status
...
